{"version":3,"sources":["uni-app:///main.js",null,"webpack:////Users/nuclearwaste/Documents/HBuilderProjects/paperPlay/pages/goal/goal.vue?f9ec","webpack:////Users/nuclearwaste/Documents/HBuilderProjects/paperPlay/pages/goal/goal.vue?3fd4","webpack:////Users/nuclearwaste/Documents/HBuilderProjects/paperPlay/pages/goal/goal.vue?7285","uni-app:///pages/goal/goal.vue","webpack:////Users/nuclearwaste/Documents/HBuilderProjects/paperPlay/pages/goal/goal.vue?5bfb","webpack:////Users/nuclearwaste/Documents/HBuilderProjects/paperPlay/pages/goal/goal.vue?7e23"],"names":["wx","__webpack_require_UNI_MP_PLUGIN__","__webpack_require__","createPage","Page","data","achievements","userStats","totalQuestions","streakDays","totalPoints","totalAchievements","totalNFTs","loading","web3Initialized","walletConnected","walletAddress","blockchainAchievements","isConnectingWallet","chainId","networkName","mounted","beforeDestroy","methods","loadAchievements","Promise","allAchievementsRes","userAchievementsRes","userAchievementIds","color","name","id","title","description","iconUrl","level","unlocked","earnedAt","levelStyle","nftMetadata","progress","total","console","uni","icon","connectWallet","provider","signer","address","network","disconnectWallet","loadBlockchainAchievements","nft","achievement","nftMinted","setupBlockchainEvents","onAccountsChanged","onChainChanged","onDisconnect","onAchievementMinted","formatAddress","formatDate","getAchievementTypeName","drawAchievementIcons","svg","stroke","strokeWidth","fill","roughness","bowing","fillStyle","dots","x","y","navigateTo","map","daily","profile","url"],"mappings":";;;;;;;;;;;;;AAAA;AAGA;AACA;AAHA;AACAA,EAAE,CAACC,iCAAiC,GAAGC,mBAAmB;AAG1DC,UAAU,CAACC,aAAI,CAAC,C;;;;;;;;;;;;;ACLhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiH;AACjH;AACwD;AACL;AACa;;;AAGhE;AACgN;AAChN,gBAAgB,iNAAU;AAC1B,EAAE,0EAAM;AACR,EAAE,+EAAM;AACR,EAAE,wFAAe;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,mFAAU;AACZ;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACvBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACtDA;AAAA;AAAA;AAAA;AAAk0B,CAAgB,kyBAAG,EAAC,C;;;;;;;;;;;;;;;;;;;;;;;AC6Jt1B;AACA;AACA;AASA;AAAA;AAAA;AAAA,eACA;EACAC;IACA;MACAC;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC;MACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IAAA;IACA;MACA;;MAEA;MACA;IACA;EACA;EACAC;IACA;IACA;IACA;EACA;EACAC;IACAC;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAEA;;gBAEA;gBAAA;gBAAA,OACAC,aACA,yCACA,yCACA;cAAA;gBAAA;gBAAA;gBAHAC;gBAAAC;gBAKA;gBACAC;kBAAA;gBAAA,IAEA;gBACA;kBAAA;kBACA;kBACA;kBACA;kBAEA;oBAAA;kBAAA;;kBAEA;kBACA;oBACA;sBAAAC;sBAAAC;oBAAA;oBAAA;oBACA;sBAAAD;sBAAAC;oBAAA;oBAAA;oBACA;sBAAAD;sBAAAC;oBAAA;kBACA;;kBAEA;kBACA;kBAEA;oBACAC;oBACAC;oBACAC;oBACAC;oBACAC;oBACAC;oBACAC;oBACAC;sBAAAT;sBAAAC;oBAAA;oBACAS;oBACAC;oBACAC;kBACA;gBACA;;gBAEA;gBACA,mDACA;kBACA9B;gBAAA,EACA;;gBAEA;gBAAA,KACA;kBAAA;kBAAA;gBAAA;gBAAA;gBAAA,OACA;cAAA;gBAGA;gBACA;kBACA;gBACA;gBAAA;gBAAA;cAAA;gBAAA;gBAAA;gBAEA+B;gBACAC;kBACAX;kBACAY;gBACA;cAAA;gBAAA;gBAEA;gBAAA;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAEA;IAEA;IACAC;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA,KACA;kBAAA;kBAAA;gBAAA;gBAAA;cAAA;gBAEA;gBAAA;gBAAA;gBAAA,OAGA;cAAA;gBAAA;gBAAAC;gBAAAC;gBACA;;gBAEA;gBAAA;gBAAA,OACAA;cAAA;gBAAAC;gBACA;gBACA;;gBAEA;gBAAA;gBAAA,OACAF;cAAA;gBAAAG;gBACA;gBACA;;gBAEA;gBAAA;gBAAA,OACA;cAAA;gBAEAN;kBACAX;kBACAY;gBACA;gBAAA;gBAAA;cAAA;gBAAA;gBAAA;gBAEAF;gBACAC;kBACAX;kBACAY;gBACA;gBACA;gBACA;cAAA;gBAAA;gBAEA;gBAAA;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAEA;IAEA;IACAM;MACA;MACA;MACA;MACA;MACA;MAEAP;QACAX;QACAY;MACA;IACA;IAEA;IACAO;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA,IACA;kBAAA;kBAAA;gBAAA;gBAAA;cAAA;gBAAA;gBAAA;gBAAA,OAGA;cAAA;gBAAAlC;gBACA;gBACA;;gBAEA;gBACA;kBACA;oBAAA,OACAmC,kCACAA;kBAAA,EACA;kBACA,uCACAC;oBACAC;kBAAA;gBAEA;gBAAA;gBAAA;cAAA;gBAAA;gBAAA;gBAGAZ;gBACA;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAEA;IAEA;IACAa;MAAA;MACA;QACAC;UACA;YACA;UACA;YACA;YACA;UACA;QACA;QACAC;UACA;UACA;YACA;UACA;QACA;QACAC;UACA;QACA;MACA;MAEA;QACAC;UACA;UACA;UACAhB;YACAX;YACAY;UACA;QACA;MACA;IACA;IAEA;IACAgB;MACA;MACA;IACA;IAEA;IACAC;MACA;MACA;MACA;IACA;IAEA;IACAC;MACA;QACA;QACA;QACA;QACA;MACA;MACA;IACA;IAEA;IACAC;MACA;QACA;QACA;UACA;UACA;YACAC;UACA;UAEA;;UAEA;UACA;YACAC;YACAC;YACAC;YACAC;YACAC;UACA;UACAL;;UAEA;UACA;YACA;YACA;cACAC;cACAC;cACAC;cACAC;cACAC;YACA;YACAL;;YAEA;YACA;cACAG;cACAF;cACAC;cACAE;cACAE;YACA;YACAN;;YAEA;YACA,YACA,8BACA,6BACA;YACAO;cAAA;gBAAAC;gBAAAC;cACA;gBACAN;gBACAF;gBACAG;gBACAE;cACA;cACAN;YACA;UACA;QACA;MACA;IACA;IACAU;MACA;QACAC;QACAC;QACAvB;QACAwB;MACA;MAEA;QACAlC;UACAmC;QACA;MACA;IACA;EACA;AACA;AAAA,2B;;;;;;;;;;;;;AC7eA;AAAA;AAAA;AAAA;AAA+qC,CAAgB,+lCAAG,EAAC,C;;;;;;;;;;;ACAnsC;AACA,OAAO,KAAU,EAAE,kBAKd","file":"pages/goal/goal.js","sourcesContent":["import 'uni-pages';\n// @ts-ignore\nwx.__webpack_require_UNI_MP_PLUGIN__ = __webpack_require__;\nimport Vue from 'vue'\nimport Page from './pages/goal/goal.vue'\ncreatePage(Page)","import { render, staticRenderFns, recyclableRender, components } from \"./goal.vue?vue&type=template&id=011f8e34&\"\nvar renderjs\nimport script from \"./goal.vue?vue&type=script&lang=js&\"\nexport * from \"./goal.vue?vue&type=script&lang=js&\"\nimport style0 from \"./goal.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"pages/goal/goal.vue\"\nexport default component.exports","export * from \"-!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--17-0!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./goal.vue?vue&type=template&id=011f8e34&\"","var components\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  var m0 = !!_vm.walletConnected ? _vm.formatAddress(_vm.walletAddress) : null\n  var g0 = !_vm.loading\n    ? _vm.walletConnected && _vm.blockchainAchievements.length > 0\n    : null\n  var g1 = !_vm.loading\n    ? _vm.walletConnected && _vm.blockchainAchievements.length > 0\n    : null\n  var l0 =\n    !_vm.loading && g1\n      ? _vm.__map(_vm.blockchainAchievements, function (nft, __i0__) {\n          var $orig = _vm.__get_orig(nft)\n          var m1 = _vm.getNFTIcon(nft.achievementType)\n          var m2 = _vm.getAchievementTypeName(nft.achievementType)\n          var m3 = _vm.formatDate(nft.timestamp)\n          return {\n            $orig: $orig,\n            m1: m1,\n            m2: m2,\n            m3: m3,\n          }\n        })\n      : null\n  var l1 = !_vm.loading\n    ? _vm.__map(_vm.achievements, function (achievement, index) {\n        var $orig = _vm.__get_orig(achievement)\n        var m4 = achievement.earnedAt\n          ? _vm.formatDate(achievement.earnedAt)\n          : null\n        return {\n          $orig: $orig,\n          m4: m4,\n        }\n      })\n    : null\n  _vm.$mp.data = Object.assign(\n    {},\n    {\n      $root: {\n        m0: m0,\n        g0: g0,\n        g1: g1,\n        l0: l0,\n        l1: l1,\n      },\n    }\n  )\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--13-1!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./goal.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--13-1!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./goal.vue?vue&type=script&lang=js&\"","<template>\n\t<view class=\"container\">\n\t\t<!-- 顶部凸弧背景 -->\n\t\t<view class=\"header-container\">\n\t\t\t<svg class=\"bottom-arch\" viewBox=\"0 0 750 120\" preserveAspectRatio=\"none\">\n\t\t\t\t<path d=\"M0,0 C300,60 450,60 750,0 L750,120 L0,120 Z\" fill=\"#b5d6f2\" />\n\t\t\t\t<text x=\"375\" y=\"50\" text-anchor=\"middle\" dominant-baseline=\"middle\" class=\"app-title\">成就</text>\n\t\t\t</svg>\n\t\t</view>\n\n\t\t<!-- 内容区域 -->\n\t\t<scroll-view class=\"content-area\" scroll-y>\n\t\t\t<view class=\"content-wrapper\">\n\t\t\t\t<!-- 钱包连接区域 -->\n\t\t\t\t<view class=\"wallet-section\">\n\t\t\t\t\t<view class=\"wallet-card\" v-if=\"!walletConnected\">\n\t\t\t\t\t\t<view class=\"wallet-info\">\n\t\t\t\t\t\t\t<text class=\"wallet-title\">🔗 区块链成就</text>\n\t\t\t\t\t\t\t<text class=\"wallet-description\">连接钱包查看您的NFT成就</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<button \n\t\t\t\t\t\t\tclass=\"connect-btn\" \n\t\t\t\t\t\t\t@click=\"connectWallet\"\n\t\t\t\t\t\t\t:loading=\"isConnectingWallet\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{ isConnectingWallet ? '连接中...' : '连接钱包' }}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</view>\n\t\t\t\t\t\n\t\t\t\t\t<view class=\"wallet-card connected\" v-else>\n\t\t\t\t\t\t<view class=\"wallet-info\">\n\t\t\t\t\t\t\t<text class=\"wallet-title\">✅ 钱包已连接</text>\n\t\t\t\t\t\t\t<text class=\"wallet-address\">{{ formatAddress(walletAddress) }}</text>\n\t\t\t\t\t\t\t<text class=\"wallet-network\">{{ networkName || 'Injective Testnet' }}</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<button class=\"disconnect-btn\" @click=\"disconnectWallet\">断开</button>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\n\t\t\t\t<view class=\"achievement-stats\">\n\t\t\t\t\t<view class=\"stat-card\" id=\"total-questions\">\n\t\t\t\t\t\t<text class=\"stat-number\">{{ userStats.totalQuestions }}</text>\n\t\t\t\t\t\t<text class=\"stat-label\">完成题目</text>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"stat-card\" id=\"streak-days\">\n\t\t\t\t\t\t<text class=\"stat-number\">{{ userStats.streakDays }}</text>\n\t\t\t\t\t\t<text class=\"stat-label\">连续天数</text>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"stat-card\" id=\"total-points\">\n\t\t\t\t\t\t<text class=\"stat-number\">{{ userStats.totalPoints }}</text>\n\t\t\t\t\t\t<text class=\"stat-label\">总积分</text>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"stat-card\" id=\"total-nfts\" v-if=\"walletConnected\">\n\t\t\t\t\t\t<text class=\"stat-number\">{{ userStats.totalNFTs }}</text>\n\t\t\t\t\t\t<text class=\"stat-label\">NFT成就</text>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\n\t\t\t\t<view v-if=\"loading\" class=\"loading\">\n\t\t\t\t\t<text>加载中...</text>\n\t\t\t\t</view>\n\n\t\t\t\t<view v-else>\n\t\t\t\t\t<!-- 区块链成就区域 -->\n\t\t\t\t\t<view v-if=\"walletConnected && blockchainAchievements.length > 0\" class=\"section-title\">\n\t\t\t\t\t\t<text>🏆 链上NFT成就</text>\n\t\t\t\t\t</view>\n\t\t\t\t\t\n\t\t\t\t\t<view v-if=\"walletConnected && blockchainAchievements.length > 0\" class=\"blockchain-achievements\">\n\t\t\t\t\t\t<view \n\t\t\t\t\t\t\tv-for=\"nft in blockchainAchievements\" \n\t\t\t\t\t\t\t:key=\"nft.tokenId\"\n\t\t\t\t\t\t\tclass=\"achievement-card blockchain-achievement\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<view class=\"achievement-icon\">\n\t\t\t\t\t\t\t\t<view class=\"nft-badge\">\n\t\t\t\t\t\t\t\t\t<text class=\"nft-icon\">{{ getNFTIcon(nft.achievementType) }}</text>\n\t\t\t\t\t\t\t\t\t<view class=\"nft-verified\">\n\t\t\t\t\t\t\t\t\t\t<text class=\"verified-text\">✓</text>\n\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t<view class=\"achievement-info\">\n\t\t\t\t\t\t\t\t<view class=\"achievement-header\">\n\t\t\t\t\t\t\t\t\t<text class=\"achievement-title\">{{ nft.name }}</text>\n\t\t\t\t\t\t\t\t\t<view class=\"nft-tag\">\n\t\t\t\t\t\t\t\t\t\t<text>NFT #{{ nft.tokenId }}</text>\n\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t<text class=\"achievement-description\">{{ nft.description }}</text>\n\t\t\t\t\t\t\t\t<view class=\"achievement-details\">\n\t\t\t\t\t\t\t\t\t<text class=\"achievement-type\">类型: {{ getAchievementTypeName(nft.achievementType) }}</text>\n\t\t\t\t\t\t\t\t\t<text class=\"achievement-time\">铸造: {{ formatDate(nft.timestamp) }}</text>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\n\t\t\t\t\t<!-- 传统成就区域 -->\n\t\t\t\t\t<view class=\"section-title\">\n\t\t\t\t\t\t<text>📋 系统成就</text>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"achievement-grid\">\n\t\t\t\t\t\t<view \n\t\t\t\t\t\t\tv-for=\"(achievement, index) in achievements\" \n\t\t\t\t\t\t\t:key=\"achievement.id\"\n\t\t\t\t\t\t\tclass=\"achievement-card\"\n\t\t\t\t\t\t\t:class=\"{ 'unlocked': achievement.unlocked, 'blockchain-linked': achievement.nftMinted }\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<view class=\"achievement-icon\">\n\t\t\t\t\t\t\t\t<svg :id=\"`achievement-${index}`\" width=\"80\" height=\"80\"></svg>\n\t\t\t\t\t\t\t\t<view v-if=\"achievement.nftMinted\" class=\"blockchain-indicator\">\n\t\t\t\t\t\t\t\t\t<text>🔗</text>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t<view class=\"achievement-info\">\n\t\t\t\t\t\t\t\t<view class=\"achievement-header\">\n\t\t\t\t\t\t\t\t\t<text class=\"achievement-title\">{{ achievement.title }}</text>\n\t\t\t\t\t\t\t\t\t<view v-if=\"achievement.nftMinted\" class=\"nft-linked-tag\">\n\t\t\t\t\t\t\t\t\t\t<text>已上链</text>\n\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t<text class=\"achievement-description\">{{ achievement.description }}</text>\n\t\t\t\t\t\t\t\t<view class=\"achievement-progress\">\n\t\t\t\t\t\t\t\t\t<text>{{ achievement.progress }}/{{ achievement.total }}</text>\n\t\t\t\t\t\t\t\t\t<text v-if=\"achievement.earnedAt\" class=\"achievement-date\">{{ formatDate(achievement.earnedAt) }}</text>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</scroll-view>\n\n\t\t<!-- 底部docker栏 -->\n\t\t<view class=\"bottom-bg\">\n\t\t\t<image src=\"/static/docker/梯形.svg\" mode=\"aspectFill\"></image>\n\t\t</view>\n\n\t\t<view class=\"bottom-docker\">\n\t\t\t<view class=\"trapezoid t1\" @click=\"navigateTo('map')\">\n\t\t\t\t<image style=\"z-index: 20;margin-left: 40rpx;\" src=\"/static/docker/地图.svg\" class=\"docker-icon\" mode=\"aspectFit\"></image>\n\t\t\t</view>\n\t\t\t<view class=\"trapezoid t2\" @click=\"navigateTo('daily')\">\n\t\t\t\t<image style=\"z-index: 20;margin-left: 40rpx;\" src=\"/static/docker/日推.svg\" class=\"docker-icon\" mode=\"aspectFit\"></image>\n\t\t\t</view>\n\t\t\t<view class=\"trapezoid t3 active\" @click=\"navigateTo('achievement')\">\n\t\t\t\t<image style=\"z-index: 20;margin-left: 40rpx;\" src=\"/static/docker/成就.svg\" class=\"docker-icon\" mode=\"aspectFit\"></image>\n\t\t\t</view>\n\t\t\t<view class=\"trapezoid t4\" @click=\"navigateTo('profile')\">\n\t\t\t\t<image style=\"z-index: 20;margin-left: 40rpx;\" src=\"/static/docker/我.svg\" class=\"docker-icon\" mode=\"aspectFit\"></image>\n\t\t\t</view>\n\t\t</view>\n\t</view>\n</template>\n\n<script>\nimport rough from 'roughjs'\nimport { getAllAchievements, getUserAchievements } from '@/api/achievements'\nimport { \n    initWeb3, \n    getCurrentAddress, \n    getUserAllAchievements, \n    subscribeToWalletEvents, \n    subscribeToAchievementEvents,\n    unsubscribeFromWalletEvents,\n    unsubscribeFromAchievementEvents\n} from '@/utils/web3.js'\nimport { ethers } from 'ethers';\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tachievements: [],\n\t\t\tuserStats: {\n\t\t\t\ttotalQuestions: 0,\n\t\t\t\tstreakDays: 0,\n\t\t\t\ttotalPoints: 0,\n\t\t\t\ttotalAchievements: 0,\n\t\t\t\ttotalNFTs: 0\n\t\t\t},\n\t\t\tloading: false,\n\t\t\t// 区块链相关状态\n\t\t\tweb3Initialized: false,\n\t\t\twalletConnected: false,\n\t\t\twalletAddress: null,\n\t\t\tblockchainAchievements: [],\n\t\t\tisConnectingWallet: false,\n\t\t\tchainId: null,\n\t\t\tnetworkName: null\n\t\t}\n\t},\n\tmounted() {\n\t\tthis.$nextTick(() => {\n\t\t\tthis.loadAchievements()\n\t\t\t\n\t\t\t// 添加区块链事件监听\n\t\t\tthis.setupBlockchainEvents()\n\t\t})\n\t},\n\tbeforeDestroy() {\n\t\t// 清理事件监听\n\t\tunsubscribeFromWalletEvents()\n\t\tunsubscribeFromAchievementEvents()\n\t},\n\tmethods: {\n\t\tasync loadAchievements() {\n\t\t\ttry {\n\t\t\t\tthis.loading = true\n\t\t\t\t\n\t\t\t\t// 获取所有成就和用户成就\n\t\t\t\tconst [allAchievementsRes, userAchievementsRes] = await Promise.all([\n\t\t\t\t\tgetAllAchievements(),\n\t\t\t\t\tgetUserAchievements()\n\t\t\t\t])\n\t\t\t\t\n\t\t\t\t// 获取用户已获得的成就ID列表\n\t\t\t\tconst userAchievementIds = (userAchievementsRes.data || []).map(ua => ua.achievement_id)\n\t\t\t\t\n\t\t\t\t// 处理成就数据\n\t\t\t\tthis.achievements = allAchievementsRes.data.map(achievement => {\n\t\t\t\t\t// 检查是否是\"首战告捷\"成就，如果是则强制设置为已解锁\n\t\t\t\t\tconst isFirstVictory = achievement.id === 'f1ee1a1f-77ea-4df8-b8e4-d214512140bf'\n\t\t\t\t\tconst isUnlocked = isFirstVictory ? true : userAchievementIds.includes(achievement.id)\n\t\t\t\t\t\n\t\t\t\t\tconst userAchievement = userAchievementsRes.data?.find(ua => ua.achievement_id === achievement.id)\n\t\t\t\t\t\n\t\t\t\t\t// 根据成就等级设置不同的样式\n\t\t\t\t\tconst levelStyles = {\n\t\t\t\t\t\t1: { color: '#CD7F32', name: 'Bronze' }, // 铜牌\n\t\t\t\t\t\t2: { color: '#C0C0C0', name: 'Silver' }, // 银牌\n\t\t\t\t\t\t3: { color: '#FFD700', name: 'Gold' }    // 金牌\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// 获取成就获得时间\n\t\t\t\t\tconst earnedAt = isFirstVictory ? new Date() : (userAchievement ? new Date(userAchievement.earned_at) : null)\n\t\t\t\t\t\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: achievement.id,\n\t\t\t\t\t\ttitle: achievement.name,\n\t\t\t\t\t\tdescription: achievement.description,\n\t\t\t\t\t\ticonUrl: achievement.icon_url,\n\t\t\t\t\t\tlevel: achievement.level,\n\t\t\t\t\t\tunlocked: isUnlocked,\n\t\t\t\t\t\tearnedAt: earnedAt,\n\t\t\t\t\t\tlevelStyle: levelStyles[achievement.level] || { color: '#ff7f50', name: 'Default' },\n\t\t\t\t\t\tnftMetadata: achievement.nft_metadata,\n\t\t\t\t\t\tprogress: isUnlocked ? 1 : 0,\n\t\t\t\t\t\ttotal: 1\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\t// 更新用户统计数据，确保包含\"首战告捷\"\n\t\t\t\tthis.userStats = {\n\t\t\t\t\t...this.userStats,\n\t\t\t\t\ttotalAchievements: Math.max(1, userAchievementIds.length) // 至少有一个成就\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 如果钱包已连接，加载区块链成就\n\t\t\t\tif (this.walletConnected) {\n\t\t\t\t\tawait this.loadBlockchainAchievements()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 绘制成就图标\n\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\tthis.drawAchievementIcons()\n\t\t\t\t})\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('加载成就失败:', error)\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: error.message || '加载成就失败',\n\t\t\t\t\ticon: 'none'\n\t\t\t\t})\n\t\t\t} finally {\n\t\t\t\tthis.loading = false\n\t\t\t}\n\t\t},\n\t\t\n\t\t// 钱包连接方法\n\t\tasync connectWallet() {\n\t\t\tif (this.isConnectingWallet) return;\n\t\t\t\n\t\t\tthis.isConnectingWallet = true;\n\t\t\ttry {\n\t\t\t\t// Initialize Web3\n\t\t\t\tconst { provider, signer } = await initWeb3();\n\t\t\t\tthis.web3Initialized = true;\n\t\t\t\t\n\t\t\t\t// Get address\n\t\t\t\tconst address = await signer.getAddress();\n\t\t\t\tthis.walletAddress = address;\n\t\t\t\tthis.walletConnected = true;\n\t\t\t\t\n\t\t\t\t// Get network info\n\t\t\t\tconst network = await provider.getNetwork();\n\t\t\t\tthis.chainId = network.chainId.toString();\n\t\t\t\tthis.networkName = 'Injective Testnet';\n\t\t\t\t\n\t\t\t\t// Load achievements\n\t\t\t\tawait this.loadBlockchainAchievements();\n\t\t\t\t\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '钱包连接成功',\n\t\t\t\t\ticon: 'success'\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('连接钱包失败:', error);\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: error.message || '连接钱包失败',\n\t\t\t\t\ticon: 'none'\n\t\t\t\t});\n\t\t\t\tthis.web3Initialized = false;\n\t\t\t\tthis.walletConnected = false;\n\t\t\t} finally {\n\t\t\t\tthis.isConnectingWallet = false;\n\t\t\t}\n\t\t},\n\t\t\n\t\t// 断开钱包连接\n\t\tdisconnectWallet() {\n\t\t\tthis.walletConnected = false\n\t\t\tthis.walletAddress = null\n\t\t\tthis.blockchainAchievements = []\n\t\t\tthis.userStats.totalNFTs = 0\n\t\t\tthis.web3Initialized = false\n\t\t\t\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '钱包已断开',\n\t\t\t\ticon: 'success'\n\t\t\t})\n\t\t},\n\t\t\n\t\t// 加载区块链成就\n\t\tasync loadBlockchainAchievements() {\n\t\t\tif (!this.walletAddress) return\n\t\t\t\n\t\t\ttry {\n\t\t\t\tconst blockchainAchievements = await getUserAllAchievements(this.walletAddress)\n\t\t\t\tthis.blockchainAchievements = blockchainAchievements\n\t\t\t\tthis.userStats.totalNFTs = blockchainAchievements.length\n\t\t\t\t\n\t\t\t\t// 标记已上链的成就\n\t\t\t\tthis.achievements = this.achievements.map(achievement => {\n\t\t\t\t\tconst isMinted = blockchainAchievements.some(nft => \n\t\t\t\t\t\tnft.name === achievement.title || \n\t\t\t\t\t\tnft.description === achievement.description\n\t\t\t\t\t)\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...achievement,\n\t\t\t\t\t\tnftMinted: isMinted\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('加载区块链成就失败:', error)\n\t\t\t\t// 静默处理错误，不影响传统成就显示\n\t\t\t}\n\t\t},\n\t\t\n\t\t// 设置区块链事件监听\n\t\tsetupBlockchainEvents() {\n\t\t\tsubscribeToWalletEvents({\n\t\t\t\tonAccountsChanged: (accounts) => {\n\t\t\t\t\tif (accounts.length === 0) {\n\t\t\t\t\t\tthis.disconnectWallet()\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.walletAddress = accounts[0]\n\t\t\t\t\t\tthis.loadBlockchainAchievements()\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tonChainChanged: (chainId) => {\n\t\t\t\t\tthis.chainId = chainId\n\t\t\t\t\tif (this.walletConnected) {\n\t\t\t\t\t\tthis.loadBlockchainAchievements()\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tonDisconnect: () => {\n\t\t\t\t\tthis.disconnectWallet()\n\t\t\t\t}\n\t\t\t})\n\t\t\t\n\t\t\tsubscribeToAchievementEvents({\n\t\t\t\tonAchievementMinted: () => {\n\t\t\t\t\t// 重新加载区块链成就\n\t\t\t\t\tthis.loadBlockchainAchievements()\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '新NFT成就已铸造',\n\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\t\n\t\t// 格式化地址\n\t\tformatAddress(address) {\n\t\t\tif (!address) return ''\n\t\t\treturn address.substring(0, 6) + '...' + address.substring(address.length - 4)\n\t\t},\n\t\t\n\t\t// 格式化日期\n\t\tformatDate(date) {\n\t\t\tif (!date) return ''\n\t\t\tconst d = new Date(date)\n\t\t\treturn `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')}`\n\t\t},\n\t\t\n\t\t// 获取成就类型名称\n\t\tgetAchievementTypeName(type) {\n\t\t\tconst types = {\n\t\t\t\t0: '青铜',\n\t\t\t\t1: '白银', \n\t\t\t\t2: '黄金',\n\t\t\t\t3: '钻石'\n\t\t\t}\n\t\t\treturn types[type] || '未知'\n\t\t},\n\t\t\n\t\t// 原有的绘制成就图标方法保持不变\n\t\tdrawAchievementIcons() {\n\t\t\tthis.achievements.forEach((achievement, index) => {\n\t\t\t\tconst svg = document.getElementById(`achievement-${index}`)\n\t\t\t\tif (svg) {\n\t\t\t\t\t// 清除现有内容\n\t\t\t\t\twhile (svg.firstChild) {\n\t\t\t\t\t\tsvg.removeChild(svg.firstChild)\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tconst rc = rough.svg(svg)\n\t\t\t\t\t\n\t\t\t\t\t// 绘制成就徽章外框\n\t\t\t\t\tconst badge = rc.circle(40, 40, 70, {\n\t\t\t\t\t\tstroke: achievement.unlocked ? achievement.levelStyle.color : '#ccc',\n\t\t\t\t\t\tstrokeWidth: 2,\n\t\t\t\t\t\tfill: achievement.unlocked ? '#fff1e6' : '#f5f5f5',\n\t\t\t\t\t\troughness: 1.5,\n\t\t\t\t\t\tbowing: 1\n\t\t\t\t\t})\n\t\t\t\t\tsvg.appendChild(badge)\n\t\t\t\t\t\n\t\t\t\t\t// 为已解锁的成就绘制星星\n\t\t\t\t\tif (achievement.unlocked) {\n\t\t\t\t\t\t// 绘制发光效果\n\t\t\t\t\t\tconst glow = rc.circle(40, 40, 75, {\n\t\t\t\t\t\t\tstroke: achievement.levelStyle.color,\n\t\t\t\t\t\t\tstrokeWidth: 1,\n\t\t\t\t\t\t\tfill: 'none',\n\t\t\t\t\t\t\troughness: 0.5,\n\t\t\t\t\t\t\tbowing: 1\n\t\t\t\t\t\t})\n\t\t\t\t\t\tsvg.appendChild(glow)\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 绘制星星\n\t\t\t\t\t\tconst star = rc.path('M40,15 L45,30 L60,30 L48,40 L52,55 L40,47 L28,55 L32,40 L20,30 L35,30 Z', {\n\t\t\t\t\t\t\tfill: achievement.levelStyle.color,\n\t\t\t\t\t\t\tstroke: achievement.levelStyle.color,\n\t\t\t\t\t\t\tstrokeWidth: 1,\n\t\t\t\t\t\t\troughness: 1.2,\n\t\t\t\t\t\t\tfillStyle: 'solid'\n\t\t\t\t\t\t})\n\t\t\t\t\t\tsvg.appendChild(star)\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 添加小装饰点\n\t\t\t\t\t\tconst dots = [\n\t\t\t\t\t\t\t[60, 20], [20, 20], [40, 10],\n\t\t\t\t\t\t\t[65, 40], [15, 40], [40, 70]\n\t\t\t\t\t\t]\n\t\t\t\t\t\tdots.forEach(([x, y]) => {\n\t\t\t\t\t\t\tconst dot = rc.circle(x, y, 3, {\n\t\t\t\t\t\t\t\tfill: achievement.levelStyle.color,\n\t\t\t\t\t\t\t\tstroke: 'none',\n\t\t\t\t\t\t\t\troughness: 0.8,\n\t\t\t\t\t\t\t\tfillStyle: 'solid'\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tsvg.appendChild(dot)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\tnavigateTo(page) {\n\t\t\tconst routes = {\n\t\t\t\tmap: '/pages/map/map',\n\t\t\t\tdaily: '/pages/daily/daily',\n\t\t\t\tachievement: '/pages/goal/goal',\n\t\t\t\tprofile: '/pages/profile/profile'\n\t\t\t}\n\t\t\t\n\t\t\tif (page !== 'achievement') {\n\t\t\t\tuni.navigateTo({\n\t\t\t\t\turl: routes[page]\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n}\n</script>\n\n<style>\n@font-face {\n    font-family: 'PingFang';\n    src: url('/static/fonts/平方手书体.ttf') format('truetype');\n    font-weight: normal;\n    font-style: normal;\n    font-display: swap;\n}\n\n.container {\n\twidth: 100vw;\n\theight: 100vh;\n\tbackground-color: #b5d6f2;\n\tposition: relative;\n\toverflow: hidden;\n}\n\n/* 顶部凸弧背景 */\n.header-container {\n\twidth: 100%;\n\theight: 120rpx;\n\tbackground-color: #b5d6f2;\n\tposition: relative;\n}\n\n.bottom-arch {\n\twidth: 100%;\n\theight: 100%;\n\tdisplay: block;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n}\n\n.app-title {\n\tfont-family: 'PingFang', cursive;\n\tfont-size: 60rpx;\n\tcolor: #ffffff;\n\tfont-weight: bold;\n\ttext-shadow: 2rpx 2rpx 4rpx rgba(0, 0, 0, 0.2);\n}\n\n/* 内容区域 */\n.content-area {\n\tposition: absolute;\n\ttop: 120rpx;\n\tleft: 0;\n\tright: 0;\n\tbottom: 160rpx;\n\tpadding: 40rpx;\n\tbox-sizing: border-box;\n}\n\n.content-wrapper {\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 40rpx; /* Added gap for spacing between sections */\n}\n\n.achievement-stats {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tmargin-bottom: 60rpx;\n\tgap: 20rpx;\n}\n\n.stat-card {\n\tbackground: white;\n\tborder-radius: 24rpx;\n\tpadding: 30rpx;\n\tflex: 1;\n\ttext-align: center;\n\tbox-shadow: 0 4rpx 16rpx rgba(0, 0, 0, 0.1);\n}\n\n.stat-number {\n\tdisplay: block;\n\tfont-family: 'PingFang';\n\tfont-size: 48rpx;\n\tfont-weight: bold;\n\tcolor: #ff7f50;\n\tmargin-bottom: 10rpx;\n}\n\n.stat-label {\n\tdisplay: block;\n\tfont-size: 28rpx;\n\tcolor: #666;\n}\n\n.achievement-grid {\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 30rpx;\n}\n\n.achievement-card {\n\tdisplay: flex;\n\talign-items: center;\n\tbackground: white;\n\tborder-radius: 24rpx;\n\tpadding: 30rpx;\n\tgap: 30rpx;\n\tbox-shadow: 0 4rpx 16rpx rgba(0, 0, 0, 0.1);\n\ttransition: transform 0.3s ease;\n}\n\n.achievement-card:active {\n\ttransform: scale(0.98);\n}\n\n.achievement-card.unlocked {\n\tborder-left: 8rpx solid #ff7f50;\n}\n\n.achievement-icon {\n\tflex-shrink: 0;\n}\n\n.achievement-info {\n\tflex: 1;\n}\n\n.achievement-title {\n\tdisplay: block;\n\tfont-family: 'PingFang';\n\tfont-size: 36rpx;\n\tfont-weight: bold;\n\tcolor: #3e2a1c;\n\tmargin-bottom: 10rpx;\n}\n\n.achievement-description {\n\tdisplay: block;\n\tfont-size: 28rpx;\n\tcolor: #666;\n\tmargin-bottom: 15rpx;\n\tline-height: 1.4;\n}\n\n.achievement-progress {\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 10rpx;\n}\n\n.achievement-progress text {\n\tfont-size: 24rpx;\n\tcolor: #ff7f50;\n\tfont-weight: bold;\n}\n\n/* 底部背景 */\n.bottom-bg {\n\tposition: fixed;\n\tbottom: 0;\n\tleft: 0;\n\tright: 0;\n\theight: 240rpx;\n\tz-index: 9995;\n}\n\n.bottom-bg image {\n\twidth: 100%;\n\theight: 100%;\n}\n\n/* 底部docker栏 */\n.bottom-docker {\n\tposition: fixed;\n\tbottom: 0;\n\tleft: 0;\n\tright: 0;\n\theight: 160rpx;\n\tdisplay: flex;\n\tz-index: 9996;\n}\n\n.trapezoid {\n\tflex: 1;\n\theight: 160rpx;\n\tposition: relative;\n\tmargin-left: -40rpx;\n}\n\n.trapezoid:first-child {\n\tmargin-left: 0;\n}\n\n.trapezoid.active .docker-icon {\n\topacity: 1;\n}\n\n.trapezoid:not(.active) .docker-icon {\n\topacity: 0.6;\n}\n\n.docker-icon {\n\tposition: absolute;\n\twidth: 84rpx;\n\theight: 84rpx;\n\tleft: 50%;\n\tbottom: 30rpx;\n\ttransform: translateX(-50%);\n\tz-index: 2;\n}\n\n.loading {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tpadding: 40rpx;\n}\n\n.loading text {\n\tfont-size: 28rpx;\n\tcolor: #666;\n}\n\n/* 区块链相关样式 */\n.wallet-section {\n\tmargin-bottom: 40rpx;\n}\n\n.wallet-card {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\tbackground: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n\tborder-radius: 24rpx;\n\tpadding: 40rpx;\n\tbox-shadow: 0 8rpx 24rpx rgba(0, 0, 0, 0.15);\n\ttransition: transform 0.3s ease;\n}\n\n.wallet-card.connected {\n\tbackground: linear-gradient(135deg, #56ab2f 0%, #a8e6cf 100%);\n}\n\n.wallet-info {\n\tflex: 1;\n}\n\n.wallet-title {\n\tdisplay: block;\n\tfont-family: 'PingFang';\n\tfont-size: 36rpx;\n\tfont-weight: bold;\n\tcolor: #ffffff;\n\tmargin-bottom: 10rpx;\n}\n\n.wallet-description, .wallet-address, .wallet-network {\n\tdisplay: block;\n\tfont-size: 28rpx;\n\tcolor: rgba(255, 255, 255, 0.9);\n\tmargin-bottom: 5rpx;\n}\n\n.connect-btn, .disconnect-btn {\n\tbackground: rgba(255, 255, 255, 0.2);\n\tcolor: #ffffff;\n\tborder: 2rpx solid rgba(255, 255, 255, 0.3);\n\tborder-radius: 24rpx;\n\tpadding: 20rpx 40rpx;\n\tfont-size: 28rpx;\n\ttransition: all 0.3s ease;\n}\n\n.connect-btn:hover, .disconnect-btn:hover {\n\tbackground: rgba(255, 255, 255, 0.3);\n\ttransform: translateY(-2rpx);\n}\n\n.section-title {\n\tmargin: 40rpx 0 30rpx;\n\tpadding: 0 20rpx;\n}\n\n.section-title text {\n\tfont-family: 'PingFang';\n\tfont-size: 40rpx;\n\tfont-weight: bold;\n\tcolor: #3e2a1c;\n}\n\n.blockchain-achievements {\n\tmargin-bottom: 40rpx;\n}\n\n.blockchain-achievement {\n\tbackground: linear-gradient(135deg, #ffecd2 0%, #fcb69f 100%);\n\tborder-left: 8rpx solid #ff7f50;\n}\n\n.nft-badge {\n\tposition: relative;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\twidth: 80rpx;\n\theight: 80rpx;\n\tbackground: linear-gradient(135deg, #ff9a9e 0%, #fecfef 100%);\n\tborder-radius: 50%;\n\tbox-shadow: 0 4rpx 12rpx rgba(0, 0, 0, 0.15);\n}\n\n.nft-icon {\n\tfont-size: 40rpx;\n}\n\n.nft-verified {\n\tposition: absolute;\n\ttop: -10rpx;\n\tright: -10rpx;\n\tbackground: #4caf50;\n\tborder-radius: 50%;\n\twidth: 30rpx;\n\theight: 30rpx;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n}\n\n.verified-text {\n\tcolor: white;\n\tfont-size: 20rpx;\n\tfont-weight: bold;\n}\n\n.nft-tag, .nft-linked-tag {\n\tbackground: #ff7f50;\n\tcolor: white;\n\tpadding: 8rpx 16rpx;\n\tborder-radius: 16rpx;\n\tfont-size: 24rpx;\n\tfont-weight: bold;\n}\n\n.achievement-header {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\tmargin-bottom: 10rpx;\n}\n\n.achievement-details {\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 5rpx;\n\tmargin-top: 10rpx;\n}\n\n.achievement-type, .achievement-time {\n\tfont-size: 24rpx;\n\tcolor: #666;\n}\n\n.achievement-date {\n\tfont-size: 24rpx;\n\tcolor: #999;\n\tmargin-left: 20rpx;\n}\n\n.blockchain-indicator {\n\tposition: absolute;\n\ttop: -10rpx;\n\tright: -10rpx;\n\tbackground: #4285f4;\n\tborder-radius: 50%;\n\twidth: 40rpx;\n\theight: 40rpx;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tfont-size: 20rpx;\n\tbox-shadow: 0 2rpx 8rpx rgba(0, 0, 0, 0.2);\n}\n\n.achievement-card.blockchain-linked {\n\tborder-left: 8rpx solid #4285f4;\n\tbackground: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%);\n}\n\n@media (prefers-color-scheme: dark) {\n\t.wallet-card {\n\t\tbackground: linear-gradient(135deg, #434343 0%, #000000 100%);\n\t}\n\t\n\t.wallet-card.connected {\n\t\tbackground: linear-gradient(135deg, #2e7d32 0%, #66bb6a 100%);\n\t}\n\t\n\t.blockchain-achievement {\n\t\tbackground: linear-gradient(135deg, #3e2723 0%, #5d4037 100%);\n\t}\n}\n</style>","import mod from \"-!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--6-oneOf-1-2!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./goal.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--6-oneOf-1-2!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./goal.vue?vue&type=style&index=0&lang=css&\"","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1753549537110\n      var cssReload = require(\"/Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"hmr\":true,\"publicPath\":\"/\",\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"sourceRoot":""}